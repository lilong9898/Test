<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--ConstraintLayout中的约束，对控件位置和大小都有影响-->
    <!--match_parent和wrap_content仍然有效，但是设置成这两个会导致约束不再影响控件大小-->
    <!--match_parent也会导致控件位置上的约束失效-->
    <!--同时新增了match_constraint(0dp)，
    设置成0dp后，这个方向上有约束，就按符合约束的match_parent处理
    设置成0dp后，这个方向上没约束，就按wrap_content处理-->
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <android.support.constraint.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <!--宽度：固定-->
            <TextView
                android:id="@+id/tv1"
                style="@style/tvStyle"
                android:layout_width="300dp"
                android:text="tv1"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--宽度：wrap content-->
            <TextView
                android:id="@+id/tv2"
                style="@style/tvStyle"
                android:layout_width="wrap_content"
                android:layout_marginTop="100dp"
                android:text="tv2"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--宽度：0dp，水平方向无约束，效果等同wrap content（注意这是只有宽度为0dp的情况）-->
            <TextView
                android:id="@+id/tv3"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_marginTop="200dp"
                android:text="tv3"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--宽度：0dp，水平方向有约束，效果等同match parent（注意这是只有宽度为0dp的情况）-->
            <TextView
                android:id="@+id/tv4"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_marginTop="300dp"
                android:text="tv4"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--宽度：0dp，水平方向有约束，效果等同match parent，左边加了margin（注意这是只有宽度为0dp的情况）-->
            <TextView
                android:id="@+id/tv5"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_marginLeft="100dp"
                android:layout_marginTop="400dp"
                android:text="tv5"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--注意：constraint layout里没法靠一个维度上的0dp实现0dp效果，因为0dp会被它翻译成一种约束(match_constraint)而非具体尺寸值-->
            <!--match_constraint表示在符合约束的条件下占尽可能多的空间（像match_parent，比如tv4 tv5）,如果没有约束，则按wrap_content处理(比如tv3)-->
            <!--需要长宽都设为0dp才能真正实现0dp效果，像下面这个-->
            <!--如果长宽都为0dp但是加了上下左右的约束，就会按约束来，具体按照这里的约束，就会实现长宽方向上都match_parent的效果，类似tv4-->
            <TextView
                android:id="@+id/tv6"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_height="0dp"
                android:layout_marginTop="500dp"
                android:text="tv6"/>
            <!--
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            -->
            >

            <!--宽度：match parent，水平方向无约束，效果等同于match parent-->
            <TextView
                android:id="@+id/tv7"
                style="@style/tvStyle"
                android:layout_width="match_parent"
                android:layout_marginTop="600dp"
                android:text="tv7"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--百分比布局：类似linearLayout中的layout_weight
            使用percent属性时，width必须是0dp，这个规则也与linearlayout类似-->
            <TextView
                android:id="@+id/tv8"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_marginTop="700dp"
                android:text="tv8"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintWidth_percent="0.7"/>

            <!--此控件占满tv8的占据70%后的剩余30%-->
            <TextView
                android:id="@+id/tv9"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:background="@android:color/holo_green_light"
                android:text="tv9"
                app:layout_constraintLeft_toRightOf="@id/tv8"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="@id/tv8"/>

            <!--设置宽高比为1:1，让高度根据这个比例设定-->
            <TextView
                android:id="@+id/tv10"
                style="@style/tvStyle"
                android:layout_width="100dp"
                android:layout_height="0dp"
                android:layout_marginTop="800dp"
                android:text="tv10"
                app:layout_constraintDimensionRatio="1:1"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--类似tv6的情况，长宽都为0dp，但设置约束，contraint layout会在满足约束的情况下按照宽高比决定大小-->
            <TextView
                android:id="@+id/tv11"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:layout_height="0dp"
                android:layout_marginTop="1000dp"
                android:text="tv11"
                app:layout_constraintDimensionRatio="H, 1:0.1"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--tv12占据了固定宽度的空间-->
            <TextView
                android:id="@+id/tv12"
                style="@style/tvStyle"
                android:layout_width="200dp"
                android:layout_marginTop="1100dp"
                android:text="tv12"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toTopOf="parent"/>

            <!--tv13为match_constraint，在有约束有weight设定的情况下，表现类似linear layout的weight-->
            <TextView
                android:id="@+id/tv13"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:background="@android:color/holo_green_light"
                android:text="tv13"
                app:layout_constraintHorizontal_weight="2"
                app:layout_constraintLeft_toRightOf="@id/tv12"
                app:layout_constraintRight_toLeftOf="@+id/tv14"
                app:layout_constraintTop_toTopOf="@id/tv12"/>

            <!--tv14为match_constraint，在有约束有weight设定的情况下，表现类似linear layout的weight-->
            <TextView
                android:id="@+id/tv14"
                style="@style/tvStyle"
                android:layout_width="0dp"
                android:background="@android:color/holo_purple"
                android:text="tv14"
                app:layout_constraintHorizontal_weight="1"
                app:layout_constraintLeft_toRightOf="@id/tv13"
                app:layout_constraintRight_toRightOf="parent"
                app:layout_constraintTop_toTopOf="@id/tv12"/>
        </android.support.constraint.ConstraintLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>
