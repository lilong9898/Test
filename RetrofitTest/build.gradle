apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.lilong.retrofittest"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Retrofit依赖于Okhttp库，所以要依赖okhttp
    compile 'com.squareup.okhttp3:okhttp:3.11.0'
    // Retrofit库
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    // 可与Retrofit配合使用的rxjava库
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Retrofit库中不包含解析数据用的converter
    // 这个库很小，只包括三个类，是将http返回数据呈现为字符串的解析器
    compile 'com.squareup.retrofit2:converter-scalars:2.0.0'
    // 也只包括三个类，是将http返回数据呈现为json实体的解析器
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    // 其它一些转换器:
    // com.squareup.retrofit2:converter-jackson:2.0.2
    // com.squareup.retrofit2:converter-simplexml:2.0.2
    // com.squareup.retrofit2:converter-protobuf:2.0.2
    // com.squareup.retrofit2:converter-moshi:2.0.2
    // com.squareup.retrofit2:converter-wire:2.0.2
    // 为了让retrofit与rxjava2联合使用，所需引入的call adapter，会将Call转换成Observable
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

}
